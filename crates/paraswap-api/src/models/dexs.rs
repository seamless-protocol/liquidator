/*
 * ParaSwap API v5
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@paraswap.io
 * Generated by: https://openapi-generator.tech
 */

/// Dexs : Supported DEXs. The list may change

/// Supported DEXs. The list may change
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Dexs {
    #[serde(rename = "Uniswap")]
    Uniswap,
    #[serde(rename = "Kyber")]
    Kyber,
    #[serde(rename = "Bancor")]
    Bancor,
    #[serde(rename = "Oasis")]
    Oasis,
    #[serde(rename = "Compound")]
    Compound,
    #[serde(rename = "Fulcrum")]
    Fulcrum,
    #[serde(rename = "0x")]
    Variant0x,
    #[serde(rename = "MakerDAO")]
    MakerDao,
    #[serde(rename = "Chai")]
    Chai,
    #[serde(rename = "ParaSwapPool")]
    ParaSwapPool,
    #[serde(rename = "Aave")]
    Aave,
    #[serde(rename = "Aave2")]
    Aave2,
    #[serde(rename = "MultiPath")]
    MultiPath,
    #[serde(rename = "MegaPath")]
    MegaPath,
    #[serde(rename = "Curve")]
    Curve,
    #[serde(rename = "Curve3")]
    Curve3,
    #[serde(rename = "Saddle")]
    Saddle,
    #[serde(rename = "IronV2")]
    IronV2,
    #[serde(rename = "BDai")]
    BDai,
    #[serde(rename = "idle")]
    Idle,
    #[serde(rename = "Weth")]
    Weth,
    #[serde(rename = "Beth")]
    Beth,
    #[serde(rename = "UniswapV2")]
    UniswapV2,
    #[serde(rename = "Balancer")]
    Balancer,
    #[serde(rename = "0xRFQt")]
    Variant0xRfqt,
    #[serde(rename = "ParaSwapPool2")]
    ParaSwapPool2,
    #[serde(rename = "ParaSwapPool3")]
    ParaSwapPool3,
    #[serde(rename = "ParaSwapPool4")]
    ParaSwapPool4,
    #[serde(rename = "ParaSwapPool5")]
    ParaSwapPool5,
    #[serde(rename = "ParaSwapPool6")]
    ParaSwapPool6,
    #[serde(rename = "SushiSwap")]
    SushiSwap,
    #[serde(rename = "LINKSWAP")]
    Linkswap,
    #[serde(rename = "Synthetix")]
    Synthetix,
    #[serde(rename = "DefiSwap")]
    DefiSwap,
    #[serde(rename = "Swerve")]
    Swerve,
    #[serde(rename = "CoFiX")]
    CoFiX,
    #[serde(rename = "Shell")]
    Shell,
    #[serde(rename = "DODOV1")]
    Dodov1,
    #[serde(rename = "DODOV2")]
    Dodov2,
    #[serde(rename = "OnChainPricing")]
    OnChainPricing,
    #[serde(rename = "PancakeSwap")]
    PancakeSwap,
    #[serde(rename = "PancakeSwapV2")]
    PancakeSwapV2,
    #[serde(rename = "ApeSwap")]
    ApeSwap,
    #[serde(rename = "Wbnb")]
    Wbnb,
    #[serde(rename = "acryptos")]
    Acryptos,
    #[serde(rename = "streetswap")]
    Streetswap,
    #[serde(rename = "bakeryswap")]
    Bakeryswap,
    #[serde(rename = "julswap")]
    Julswap,
    #[serde(rename = "vswap")]
    Vswap,
    #[serde(rename = "vpegswap")]
    Vpegswap,
    #[serde(rename = "beltfi")]
    Beltfi,
    #[serde(rename = "ellipsis")]
    Ellipsis,
    #[serde(rename = "QuickSwap")]
    QuickSwap,
    #[serde(rename = "COMETH")]
    Cometh,
    #[serde(rename = "Wmatic")]
    Wmatic,
    #[serde(rename = "Nerve")]
    Nerve,
    #[serde(rename = "Dfyn")]
    Dfyn,
    #[serde(rename = "UniswapV3")]
    UniswapV3,
    #[serde(rename = "Smoothy")]
    Smoothy,
    #[serde(rename = "PantherSwap")]
    PantherSwap,
    #[serde(rename = "OMM1")]
    Omm1,
    #[serde(rename = "OneInchLP")]
    OneInchLp,
    #[serde(rename = "CurveV2")]
    CurveV2,
    #[serde(rename = "mStable")]
    MStable,
    #[serde(rename = "WaultFinance")]
    WaultFinance,
    #[serde(rename = "MDEX")]
    Mdex,
    #[serde(rename = "ShibaSwap")]
    ShibaSwap,
    #[serde(rename = "CoinSwap")]
    CoinSwap,
    #[serde(rename = "SakeSwap")]
    SakeSwap,
    #[serde(rename = "JetSwap")]
    JetSwap,
    #[serde(rename = "Biswap")]
    Biswap,
    #[serde(rename = "BProtocol")]
    BProtocol,

}

impl ToString for Dexs {
    fn to_string(&self) -> String {
        match self {
            Self::Uniswap => String::from("Uniswap"),
            Self::Kyber => String::from("Kyber"),
            Self::Bancor => String::from("Bancor"),
            Self::Oasis => String::from("Oasis"),
            Self::Compound => String::from("Compound"),
            Self::Fulcrum => String::from("Fulcrum"),
            Self::Variant0x => String::from("0x"),
            Self::MakerDao => String::from("MakerDAO"),
            Self::Chai => String::from("Chai"),
            Self::ParaSwapPool => String::from("ParaSwapPool"),
            Self::Aave => String::from("Aave"),
            Self::Aave2 => String::from("Aave2"),
            Self::MultiPath => String::from("MultiPath"),
            Self::MegaPath => String::from("MegaPath"),
            Self::Curve => String::from("Curve"),
            Self::Curve3 => String::from("Curve3"),
            Self::Saddle => String::from("Saddle"),
            Self::IronV2 => String::from("IronV2"),
            Self::BDai => String::from("BDai"),
            Self::Idle => String::from("idle"),
            Self::Weth => String::from("Weth"),
            Self::Beth => String::from("Beth"),
            Self::UniswapV2 => String::from("UniswapV2"),
            Self::Balancer => String::from("Balancer"),
            Self::Variant0xRfqt => String::from("0xRFQt"),
            Self::ParaSwapPool2 => String::from("ParaSwapPool2"),
            Self::ParaSwapPool3 => String::from("ParaSwapPool3"),
            Self::ParaSwapPool4 => String::from("ParaSwapPool4"),
            Self::ParaSwapPool5 => String::from("ParaSwapPool5"),
            Self::ParaSwapPool6 => String::from("ParaSwapPool6"),
            Self::SushiSwap => String::from("SushiSwap"),
            Self::Linkswap => String::from("LINKSWAP"),
            Self::Synthetix => String::from("Synthetix"),
            Self::DefiSwap => String::from("DefiSwap"),
            Self::Swerve => String::from("Swerve"),
            Self::CoFiX => String::from("CoFiX"),
            Self::Shell => String::from("Shell"),
            Self::Dodov1 => String::from("DODOV1"),
            Self::Dodov2 => String::from("DODOV2"),
            Self::OnChainPricing => String::from("OnChainPricing"),
            Self::PancakeSwap => String::from("PancakeSwap"),
            Self::PancakeSwapV2 => String::from("PancakeSwapV2"),
            Self::ApeSwap => String::from("ApeSwap"),
            Self::Wbnb => String::from("Wbnb"),
            Self::Acryptos => String::from("acryptos"),
            Self::Streetswap => String::from("streetswap"),
            Self::Bakeryswap => String::from("bakeryswap"),
            Self::Julswap => String::from("julswap"),
            Self::Vswap => String::from("vswap"),
            Self::Vpegswap => String::from("vpegswap"),
            Self::Beltfi => String::from("beltfi"),
            Self::Ellipsis => String::from("ellipsis"),
            Self::QuickSwap => String::from("QuickSwap"),
            Self::Cometh => String::from("COMETH"),
            Self::Wmatic => String::from("Wmatic"),
            Self::Nerve => String::from("Nerve"),
            Self::Dfyn => String::from("Dfyn"),
            Self::UniswapV3 => String::from("UniswapV3"),
            Self::Smoothy => String::from("Smoothy"),
            Self::PantherSwap => String::from("PantherSwap"),
            Self::Omm1 => String::from("OMM1"),
            Self::OneInchLp => String::from("OneInchLP"),
            Self::CurveV2 => String::from("CurveV2"),
            Self::MStable => String::from("mStable"),
            Self::WaultFinance => String::from("WaultFinance"),
            Self::Mdex => String::from("MDEX"),
            Self::ShibaSwap => String::from("ShibaSwap"),
            Self::CoinSwap => String::from("CoinSwap"),
            Self::SakeSwap => String::from("SakeSwap"),
            Self::JetSwap => String::from("JetSwap"),
            Self::Biswap => String::from("Biswap"),
            Self::BProtocol => String::from("BProtocol"),
        }
    }
}

impl Default for Dexs {
    fn default() -> Dexs {
        Self::Uniswap
    }
}




