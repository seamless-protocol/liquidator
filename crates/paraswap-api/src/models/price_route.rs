/*
 * ParaSwap API v5
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@paraswap.io
 * Generated by: https://openapi-generator.tech
 */

/// PriceRoute : Response Body returned from `/prices` endpoint.



#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct PriceRoute {
    #[serde(rename = "blockNumber")]
    pub block_number: i32,
    #[serde(rename = "network")]
    pub network: i32,
    /// Source Token Address
    #[serde(rename = "srcToken")]
    pub src_token: String,
    #[serde(rename = "srcDecimals")]
    pub src_decimals: i32,
    #[serde(rename = "srcAmount")]
    pub src_amount: String,
    /// Destination Token Address
    #[serde(rename = "destToken")]
    pub dest_token: String,
    #[serde(rename = "destDecimals")]
    pub dest_decimals: i32,
    #[serde(rename = "destAmount")]
    pub dest_amount: String,
    #[serde(rename = "bestRoute")]
    pub best_route: Vec<crate::models::OptimalRoute>,
    #[serde(rename = "others", skip_serializing_if = "Option::is_none")]
    pub others: Option<Box<crate::models::PriceRouteOthers>>,
    #[serde(rename = "gasCostUSD")]
    pub gas_cost_usd: String,
    #[serde(rename = "gasCost")]
    pub gas_cost: String,
    #[serde(rename = "side")]
    pub side: crate::models::SwapSide,
    #[serde(rename = "tokenTransferProxy")]
    pub token_transfer_proxy: String,
    #[serde(rename = "contractAddress")]
    pub contract_address: String,
    #[serde(rename = "contractMethod")]
    pub contract_method: String,
    #[serde(rename = "srcUSD")]
    pub src_usd: String,
    #[serde(rename = "destUSD")]
    pub dest_usd: String,
    #[serde(rename = "partner")]
    pub partner: String,
    #[serde(rename = "partnerFee")]
    pub partner_fee: i32,
    #[serde(rename = "maxImpactReached")]
    pub max_impact_reached: bool,
    #[serde(rename = "hmac")]
    pub hmac: String,
}

impl PriceRoute {
    /// Response Body returned from `/prices` endpoint.
    pub fn new(block_number: i32, network: i32, src_token: String, src_decimals: i32, src_amount: String, dest_token: String, dest_decimals: i32, dest_amount: String, best_route: Vec<crate::models::OptimalRoute>, gas_cost_usd: String, gas_cost: String, side: crate::models::SwapSide, token_transfer_proxy: String, contract_address: String, contract_method: String, src_usd: String, dest_usd: String, partner: String, partner_fee: i32, max_impact_reached: bool, hmac: String) -> PriceRoute {
        PriceRoute {
            block_number,
            network,
            src_token,
            src_decimals,
            src_amount,
            dest_token,
            dest_decimals,
            dest_amount,
            best_route,
            others: None,
            gas_cost_usd,
            gas_cost,
            side,
            token_transfer_proxy,
            contract_address,
            contract_method,
            src_usd,
            dest_usd,
            partner,
            partner_fee,
            max_impact_reached,
            hmac,
        }
    }
}


