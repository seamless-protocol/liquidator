/*
 * ParaSwap API v5
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@paraswap.io
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TransactionsErrorMessage {
    #[serde(rename = "Unable to check price impact")]
    UnableToCheckPriceImpact,
    #[serde(rename = "It seems like the rate has changed, please re-query the latest Price")]
    ItSeemsLikeTheRateHasChangedCommaPleaseReQueryTheLatestPrice,
    #[serde(rename = "The rate has changed, please re-query the latest Price")]
    TheRateHasChangedCommaPleaseReQueryTheLatestPrice,
    #[serde(rename = "It seems like your wallet doesn't contain enough ETH to cover the gas fees.")]
    ItSeemsLikeYourWalletDoesnQuoteTContainEnoughEthToCoverTheGasFeesPeriod,
    #[serde(rename = "It seems like your wallet doesn't contain enough BNB to cover the gas fees.")]
    ItSeemsLikeYourWalletDoesnQuoteTContainEnoughBnbToCoverTheGasFeesPeriod,
    #[serde(rename = "It seems like your wallet doesn't contain enough MATIC to cover the gas fees.")]
    ItSeemsLikeYourWalletDoesnQuoteTContainEnoughMaticToCoverTheGasFeesPeriod,
    #[serde(rename = "Not enough <TOKEN_ADDRESS or TOKEN_SYMBOL> balance")]
    NotEnoughLessThanTokenAddressOrTokenSymbolGreaterThanBalance,
    #[serde(rename = "Not enough <TOKEN_ADDRESS or TOKEN_SYMBOL> allowance given to TokenTransferProxy(<CONTRACT_ADDRESS>)")]
    NotEnoughLessThanTokenAddressOrTokenSymbolGreaterThanAllowanceGivenToTokenTransferProxyLeftParenthesisLessThanContractAddressGreaterThanRightParenthesis,
    #[serde(rename = "Network Mismatch")]
    NetworkMismatch,
    #[serde(rename = "Missing srcAmount")]
    MissingSrcAmount,
    #[serde(rename = "Missing destAmount")]
    MissingDestAmount,
    #[serde(rename = "Cannot specify both slippage and srcAmount")]
    CannotSpecifyBothSlippageAndSrcAmount,
    #[serde(rename = "Cannot specify both slippage and destAmount")]
    CannotSpecifyBothSlippageAndDestAmount,
    #[serde(rename = "Missing slippage or srcAmount")]
    MissingSlippageOrSrcAmount,
    #[serde(rename = "Missing slippage or destAmount")]
    MissingSlippageOrDestAmount,
    #[serde(rename = "Source Amount Mismatch")]
    SourceAmountMismatch,
    #[serde(rename = "Destination Amount Mismatch")]
    DestinationAmountMismatch,
    #[serde(rename = "Source Token Mismatch")]
    SourceTokenMismatch,
    #[serde(rename = "Destination Token Mismatch")]
    DestinationTokenMismatch,
    #[serde(rename = "Error Parsing params")]
    ErrorParsingParams,
    #[serde(rename = "priceRoute must be unmodified as sent by the price endpoint")]
    PriceRouteMustBeUnmodifiedAsSentByThePriceEndpoint,
    #[serde(rename = "Unable to process the transaction")]
    UnableToProcessTheTransaction,
    #[serde(rename = "ERROR_BUILDING_TRANSACTION")]
    ErrorBuildingTransaction,
    #[serde(rename = "An error has occurred, please try again later or contact our support")]
    AnErrorHasOccurredCommaPleaseTryAgainLaterOrContactOurSupport,

}

impl ToString for TransactionsErrorMessage {
    fn to_string(&self) -> String {
        match self {
            Self::UnableToCheckPriceImpact => String::from("Unable to check price impact"),
            Self::ItSeemsLikeTheRateHasChangedCommaPleaseReQueryTheLatestPrice => String::from("It seems like the rate has changed, please re-query the latest Price"),
            Self::TheRateHasChangedCommaPleaseReQueryTheLatestPrice => String::from("The rate has changed, please re-query the latest Price"),
            Self::ItSeemsLikeYourWalletDoesnQuoteTContainEnoughEthToCoverTheGasFeesPeriod => String::from("It seems like your wallet doesn't contain enough ETH to cover the gas fees."),
            Self::ItSeemsLikeYourWalletDoesnQuoteTContainEnoughBnbToCoverTheGasFeesPeriod => String::from("It seems like your wallet doesn't contain enough BNB to cover the gas fees."),
            Self::ItSeemsLikeYourWalletDoesnQuoteTContainEnoughMaticToCoverTheGasFeesPeriod => String::from("It seems like your wallet doesn't contain enough MATIC to cover the gas fees."),
            Self::NotEnoughLessThanTokenAddressOrTokenSymbolGreaterThanBalance => String::from("Not enough <TOKEN_ADDRESS or TOKEN_SYMBOL> balance"),
            Self::NotEnoughLessThanTokenAddressOrTokenSymbolGreaterThanAllowanceGivenToTokenTransferProxyLeftParenthesisLessThanContractAddressGreaterThanRightParenthesis => String::from("Not enough <TOKEN_ADDRESS or TOKEN_SYMBOL> allowance given to TokenTransferProxy(<CONTRACT_ADDRESS>)"),
            Self::NetworkMismatch => String::from("Network Mismatch"),
            Self::MissingSrcAmount => String::from("Missing srcAmount"),
            Self::MissingDestAmount => String::from("Missing destAmount"),
            Self::CannotSpecifyBothSlippageAndSrcAmount => String::from("Cannot specify both slippage and srcAmount"),
            Self::CannotSpecifyBothSlippageAndDestAmount => String::from("Cannot specify both slippage and destAmount"),
            Self::MissingSlippageOrSrcAmount => String::from("Missing slippage or srcAmount"),
            Self::MissingSlippageOrDestAmount => String::from("Missing slippage or destAmount"),
            Self::SourceAmountMismatch => String::from("Source Amount Mismatch"),
            Self::DestinationAmountMismatch => String::from("Destination Amount Mismatch"),
            Self::SourceTokenMismatch => String::from("Source Token Mismatch"),
            Self::DestinationTokenMismatch => String::from("Destination Token Mismatch"),
            Self::ErrorParsingParams => String::from("Error Parsing params"),
            Self::PriceRouteMustBeUnmodifiedAsSentByThePriceEndpoint => String::from("priceRoute must be unmodified as sent by the price endpoint"),
            Self::UnableToProcessTheTransaction => String::from("Unable to process the transaction"),
            Self::ErrorBuildingTransaction => String::from("ERROR_BUILDING_TRANSACTION"),
            Self::AnErrorHasOccurredCommaPleaseTryAgainLaterOrContactOurSupport => String::from("An error has occurred, please try again later or contact our support"),
        }
    }
}

impl Default for TransactionsErrorMessage {
    fn default() -> TransactionsErrorMessage {
        Self::UnableToCheckPriceImpact
    }
}




