/*
 * ParaSwap API v5
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@paraswap.io
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PriceErrorMessage {
    #[serde(rename = "Invalid tokens")]
    InvalidTokens,
    #[serde(rename = "Invalid route, from token should be the first token of the route")]
    InvalidRouteCommaFromTokenShouldBeTheFirstTokenOfTheRoute,
    #[serde(rename = "Invalid route, to token should be the last token of the route")]
    InvalidRouteCommaToTokenShouldBeTheLastTokenOfTheRoute,
    #[serde(rename = "Token not found")]
    TokenNotFound,
    #[serde(rename = "Price Timeout")]
    PriceTimeout,
    #[serde(rename = "computePrice Error")]
    ComputePriceError,
    #[serde(rename = "Bad USD price")]
    BadUsdPrice,
    #[serde(rename = "ERROR_GETTING_PRICES")]
    ErrorGettingPrices,
    #[serde(rename = "An error has occurred, please try again later or contact our support")]
    AnErrorHasOccurredCommaPleaseTryAgainLaterOrContactOurSupport,

}

impl ToString for PriceErrorMessage {
    fn to_string(&self) -> String {
        match self {
            Self::InvalidTokens => String::from("Invalid tokens"),
            Self::InvalidRouteCommaFromTokenShouldBeTheFirstTokenOfTheRoute => String::from("Invalid route, from token should be the first token of the route"),
            Self::InvalidRouteCommaToTokenShouldBeTheLastTokenOfTheRoute => String::from("Invalid route, to token should be the last token of the route"),
            Self::TokenNotFound => String::from("Token not found"),
            Self::PriceTimeout => String::from("Price Timeout"),
            Self::ComputePriceError => String::from("computePrice Error"),
            Self::BadUsdPrice => String::from("Bad USD price"),
            Self::ErrorGettingPrices => String::from("ERROR_GETTING_PRICES"),
            Self::AnErrorHasOccurredCommaPleaseTryAgainLaterOrContactOurSupport => String::from("An error has occurred, please try again later or contact our support"),
        }
    }
}

impl Default for PriceErrorMessage {
    fn default() -> PriceErrorMessage {
        Self::InvalidTokens
    }
}




